{"ast":null,"code":"var _jsxFileName = \"D:\\\\New tasks(Chatgpt)\\\\react-store-app\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n\n  // Function to update the quantity of a specific item\n  const updateCartQuantity = (id, quantity) => {\n    setCart(prevCart => prevCart.map(item => item.id === id ? {\n      ...item,\n      quantity\n    } : item));\n  };\n\n  // Function to remove an item from the cart\n  const removeFromCart = id => {\n    setCart(prevCart => prevCart.filter(item => item.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      updateCartQuantity,\n      removeFromCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"ZqFaEIYkzI5UoYUmTgmqHbYYm/0=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","updateCartQuantity","id","quantity","prevCart","map","item","removeFromCart","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/New tasks(Chatgpt)/react-store-app/src/context/CartContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\nexport const CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n\r\n  // Function to update the quantity of a specific item\r\n  const updateCartQuantity = (id, quantity) => {\r\n    setCart((prevCart) =>\r\n      prevCart.map((item) => (item.id === id ? { ...item, quantity } : item))\r\n    );\r\n  };\r\n\r\n  // Function to remove an item from the cart\r\n  const removeFromCart = (id) => {\r\n    setCart((prevCart) => prevCart.filter((item) => item.id !== id));\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cart, updateCartQuantity, removeFromCart }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,MAAMS,kBAAkB,GAAGA,CAACC,EAAE,EAAEC,QAAQ,KAAK;IAC3CH,OAAO,CAAEI,QAAQ,IACfA,QAAQ,CAACC,GAAG,CAAEC,IAAI,IAAMA,IAAI,CAACJ,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGI,IAAI;MAAEH;IAAS,CAAC,GAAGG,IAAK,CACxE,CAAC;EACH,CAAC;;EAED;EACA,MAAMC,cAAc,GAAIL,EAAE,IAAK;IAC7BF,OAAO,CAAEI,QAAQ,IAAKA,QAAQ,CAACI,MAAM,CAAEF,IAAI,IAAKA,IAAI,CAACJ,EAAE,KAAKA,EAAE,CAAC,CAAC;EAClE,CAAC;EAED,oBACER,OAAA,CAACC,WAAW,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEX,IAAI;MAAEE,kBAAkB;MAAEM;IAAe,CAAE;IAAAV,QAAA,EACvEA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAChB,EAAA,CApBWF,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}